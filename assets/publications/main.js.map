{"version":3,"sources":["./src/environments/environment.ts","./src/app/publication/publication.component.ts","./src/app/publication/publication.component.html","./src/app/publications/publications.component.html","./src/app/publications/publications.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/process-httpmsg.service.ts","./src/app/shared/baseurl.ts","./src/app/app-routing.module.ts","./src/app/services/publication.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n\nimport { Publication } from '../models/publication';\n\n\n@Component({\n  selector: 'app-publication',\n  templateUrl: './publication.component.html',\n  styleUrls: ['./publication.component.scss']\n})\nexport class PublicationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>publication works!</p>\n","<!-- <p *ngFor=\"let publication of publications\">{{publication.title}}</p>\n<figure *ngFor=\"let publication of publications\">\n  <img [src]=\"publication.front\" alt=\"image\" style=\"width:20%\">\n  <figcaption>{{publication.title}}</figcaption>\n</figure>\n-->\n<p class=\"text-center h3 text-light\">{{publications.length}} Tech Books 📚 read so far!</p>\n<!-- <div class=\"d-flex flex-justify-center flex-wrap m-2\">\n    <button class=\"button m-1\" (click)=\"doSomething()\">Click Me! <span class=\"mif-arrow-down\"></span></button>\n</div> -->\n\n\n\n\n<ul id=\"paintings\"\n    data-role=\"list\"\n    data-sort-class=\"painting-price\"\n    data-sort-dir=\"desc\"\n    data-cls-list=\"unstyled-list row flex-justify-center mt-4\"\n    data-cls-list-item=\"cell-sm-6 cell-md-4\"\n>\n<li *ngFor=\"let publication of publications; let i = index\">\n  <div class=\"flip-card effect-on-hover\" style=\"height: 300px; width: 100%\">\n    <div class=\"front\">\n      <figure class=\"text-center\">\n        <div class=\"img-container thumbnail\">\n            <a href=\"{{ publications[i].back }}\" target=\"_blank\" title=\"{{ publications[i].title }}\">\n              <img src=\"{{ publications[i].front }}\" alt=\"{{ publications[i].title }}\">\n            </a>\n        </div>\n        <figcaption class=\"painting-name\">{{ publications[i].title }}</figcaption>\n      </figure>\n    </div>\n    <div class=\"back\">\n      <figure class=\"text-center\">\n        <div class=\"img-container thumbnail\">\n            <a href=\"{{ publications[i].back }}\" target=\"_blank\" title=\"{{ publications[i].title }}\">\n              <img src=\"{{ publications[i].back }}\" alt=\"{{ publications[i].title }}\">\n            </a>\n        </div>\n        <figcaption class=\"painting-name\">{{ publications[i].title }}</figcaption>\n      </figure>\n    </div>\n  </div>\n</li>\n\n    <!-- <li *ngFor=\"let publication of publications; let i = index\">\n        <figure class=\"text-center\">\n            <div class=\"img-container thumbnail\">\n                <a href=\"{{ publications[i].front }}\" target=\"_blank\" title=\"Credential for {{ publications[i].title }}\">\n                  <img src=\"{{ publications[i].front }}\" alt=\"Credential for {{ publications[i].title }}\">\n                </a>\n            </div>\n            <figcaption class=\"painting-name\">{{ publications[i].title }}</figcaption>\n        </figure>\n    </li> -->\n</ul>\n\n<!-- <div data-role=\"marquee\">\n  <div class=\"marquee__item moveLeftRight\" style=\"left: -326px;\">Unprepared minerals captures most blisses. </div>\n  <div class=\"marquee__item moveLeftRight\" style=\"left: 97px;\">Mysterious enlightenments loves most blessings.</div>\n  <div class=\"marquee__item moveLeftRight\" style=\"left: -405px;\">One important conclusion i give you: avoid each other.</div>\n</div> -->\n\n\n\n\n\n\n\n","import { TodoItem } from './../models/todoitem';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Publication } from '../models/publication';\nimport { PublicationService } from '../services/publication.service';\n\n@Component({\n  selector: 'app-publications',\n  templateUrl: './publications.component.html',\n  styleUrls: ['./publications.component.scss']\n})\nexport class PublicationsComponent implements OnInit {\n\n  // FIELDS\n  publications: Publication[];\n  errMess: string;\n\n  todoItems: TodoItem[];\n\n  constructor(private publicationService: PublicationService) {\n    this.publications = [];\n    this.errMess      = '';\n\n    this.todoItems = [];\n   }\n\n  ngOnInit(): void {\n    // GET PUBLICATIONS FROM SERVER\n    this.publicationService.getPublications()\n        .subscribe( (publicationsFromServer) => this.publications = publicationsFromServer,\n        errmess => this.errMess = errmess as any);\n  }\n\n  sortList(): void {\n\n    this.publications.sort();\n\n  }\n\n  doSomething(): void {\n    // const newPublicationToPostInServer = new Publication();\n    // newPublicationToPostInServer.title = 'Internet PARA TOTÓS';\n    // newPublicationToPostInServer.front = 'https://live.staticflickr.com/65535/49512257438_75003a4f14_z.jpg';\n    // const obs = this.publicationService.postPublication(newPublicationToPostInServer)\n    // .subscribe(feedback => {\n    //   // alert(feedback);\n    // },\n    // errmess => { /*alert(errmess);*/ });\n\n    // const employeeGeofences = this.publicationService.getEmployeeGeofences().subscribe(feedback => {\n    //   alert(feedback.toString());\n    // },\n    // errmess => { alert(errmess); });\n    // const rosterGeofences = this.publicationService.getRosterGeofences().subscribe(feedback => {\n    //   alert(feedback.toString());\n    // },\n    // errmess => { alert(errmess); });\n\n\n    const employeeGeofence = this.publicationService.getEmployeeGeofence().subscribe(feedback => {\n\n      for (const x in feedback) {\n        if (x) {\n          alert(x.toString());\n        }\n      }\n\n    },\n    errmess => { alert(errmess); });\n\n    const rosterGeofence = this.publicationService.getRosterGeofence().subscribe(feedback => {\n\n      for (const x in feedback) {\n        if (x) {\n          alert(x.toString());\n        }\n      }\n\n    },\n    errmess => { alert(errmess); });\n\n    // const postedEmployeeGeofence = this.publicationService.postEmployeeGeofence({}).subscribe(feedback => {\n    //   alert(feedback.toString());\n    // },\n    // errmess => { alert(errmess); });\n\n    // const deletedEmployeeGeofence = this.publicationService.deleteEmployeeGeofence({}).subscribe(feedback => {\n    //   alert(feedback.toString());\n    // },\n    // errmess => { alert(errmess); });\n\n    const postedRosterGeofence = this.publicationService.postRosterGeofence({}).subscribe(feedback => {\n      alert(feedback.toString());\n    },\n    errmess => { alert(errmess); });\n\n    const deletedRosterGeofence = this.publicationService.deleteRosterGeofence({}).subscribe(feedback => {\n      alert(feedback.toString());\n    },\n    errmess => { alert(errmess); });\n\n\n    // INSERT COMMENTS IN THE DISH COPY AND PUT TO THE SERVER\n\n    // this.dishcopy.comments.push(newComment);\n    // this.dishservice.putDish(this.dishcopy)\n    //   .subscribe(dish => {\n    //     this.dish = dish; this.dishcopy = dish;\n    //   },\n    //   errmess => { this.dish = this.dish; this.dishcopy = this.dish; this.errMess = <any>errmess; });\n\n    // // SEND FEEDBACK TO SERVER\n    // this.requestInProgress = true;\n    // this.feedbackService.submitFeedback(this.feedback)\n    // .subscribe(feedback => {\n    //   this.feedback = feedback;\n    // },\n    // errmess => { this.feedback = this.feedback; this.errMess = <any>errmess; });\n\n    // const newTodoItemToPost = new TodoItem();\n    // newTodoItemToPost.id = 1;\n    // newTodoItemToPost.name = \"Todo Item From Angular\";\n    // newTodoItemToPost.isComplete = false;\n    // this.publicationService.postTodoItem(newTodoItemToPost)\n    // .subscribe(feedback => {\n    //     alert(feedback);\n    //   },\n    //   errmess => { alert(errmess); });\n\n    // alert();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Publications';\n}\n","<!-- <app-publication></app-publication> -->\n\n<app-publications></app-publications>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PublicationComponent } from './publication/publication.component';\nimport { PublicationsComponent } from './publications/publications.component';\n\n// ADDED\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PublicationComponent,\n    PublicationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessHTTPMsgService {\n\n  constructor() { }\n\n  public handleError(error: HttpErrorResponse | any) {\n    let errMsg: string;\n\n    if (error.error instanceof ErrorEvent) {\n      errMsg = error.error.message;\n    } else {\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\n    }\n    return throwError(errMsg);\n  }\n}\n","export const baseURL = 'http://localhost:3000/';\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Publication } from '../models/publication';\nimport { TodoItem } from '../models/todoitem';\nimport { Observable, of } from 'rxjs';\n\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\n\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicationService {\n\n  constructor(private http: HttpClient,\n              private processHTTPMsgService: ProcessHTTPMsgService) { }\n\n  getPublications(): Observable<Publication[]> {\n    return this.http.get<Publication[]>('https://vitmfs.github.io/assets/publications_db.json'/*baseURL + 'Publications'*/)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  // https://localhost:44373/api/EmployeeGeofences\n\n  getEmployeeGeofences(): Observable<object[]> {\n    const employeeGeofencesUrlEndpoint = 'https://localhost:44373/api/EmployeeGeofences';\n    return this.http.get<object[]>(employeeGeofencesUrlEndpoint)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getRosterGeofences(): Observable<object[]> {\n    const rosterGeofencesUrlEndpoint = 'https://localhost:44373/api/RosterGeofences';\n    return this.http.get<object[]>(rosterGeofencesUrlEndpoint)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getEmployeeGeofence(): Observable<object> {\n    return this.http.get<object>('https://localhost/QualityOfLifePortalAPI/api/employeegeofences/getemployeegeofence?employeeCode=3&startDate=2012-06-21%2010%3A34%3A09.000&geofenceID=3')\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  getRosterGeofence(): Observable<object> {\n    return this.http.get<object>('https://localhost/QualityOfLifePortalAPI/api/rostergeofences/getrostergeofence?rosterCode=2&startDate=2012-06-20%2010%3A34%3A09.000&geofenceID=2')\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n  postEmployeeGeofence(employeeGeofenceToPost: object): Observable<object> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify({\n      \"employeeCode\": 26,\n      \"startDate\": \"2021-07-22T15:22:47.128Z\",\n      \"endDate\": \"2021-07-22T15:22:47.128Z\",\n      \"geofenceID\": 26,\n      \"timeStamp\": \"2021-07-22T15:22:47.128Z\"\n    });\n    // alert(body);\n\n    return this.http.post<Publication>('https://localhost/QualityOfLifePortalAPI/api/employeegeofences/save', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n\n  deleteEmployeeGeofence(employeeGeofenceToPost: object): Observable<object> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify({\n      \"employeeCode\": 25,\n      \"startDate\": \"2021-07-22T15:22:47.128Z\",\n      \"endDate\": \"2021-07-22T15:22:47.128Z\",\n      \"geofenceID\": 25,\n      \"timeStamp\": \"2021-07-22T15:22:47.128Z\"\n    });\n    // alert(body);\n\n    return this.http.post<Publication>('https://localhost/QualityOfLifePortalAPI/api/employeegeofences/delete?employeeCode=25&startDate=2021-07-22%2015%3A22%3A47.127&geofenceID=25', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n\n  postRosterGeofence(rosterGeofenceToPost: object): Observable<object> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify({\n      \"RosterCode\": 27,\n      \"StartDate\": \"2021-07-23T11:10:08.181Z\",\n      \"EndDate\": \"2021-07-23T11:10:08.181Z\",\n      \"GeofenceID\": 27,\n      \"TimeStamp\": \"2021-07-23T11:10:08.181Z\",\n      \"Timestamp\": \"2021-07-23T11:10:08.181Z\"\n    });\n    // alert(body);\n\n    return this.http.post<Publication>('https://localhost/QualityOfLifePortalAPI/api/rostergeofences/save', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n\n  deleteRosterGeofence(rosterGeofenceToPost: object): Observable<object> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify({\n      \"RosterCode\": 10,\n      \"StartDate\": \"2021-07-23T11:10:08.181Z\",\n      \"EndDate\": \"2021-07-23T11:10:08.181Z\",\n      \"GeofenceID\": 10,\n      \"TimeStamp\": \"2021-07-23T11:10:08.181Z\",\n      \"Timestamp\": \"2021-07-23T11:10:08.181Z\"\n    });\n    // alert(body);\n\n    return this.http.post<Publication>('https://localhost/QualityOfLifePortalAPI/api/rostergeofences/delete?rosterCode=10&startDate=2021-07-23%2011%3A10%3A08.180&geofenceID=10', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n\n  // getTodoItems(): Observable<TodoItem[]> {\n  //   return this.http.get<TodoItem[]>('https://localhost:44304/api/TodoItems')\n  //     .pipe(catchError(this.processHTTPMsgService.handleError));\n  // }\n\n\n  postPublication(publicationToPost: Publication): Observable<Publication> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify(publicationToPost);\n    // alert(body);\n\n    return this.http.post<Publication>(baseURL + 'publications/', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n  postTodoItem(todoItemToPost: TodoItem): Observable<TodoItem> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify(todoItemToPost);\n    // alert(body);\n\n    return this.http.post<TodoItem>(baseURL + 'new_publications/', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n\n  putPublication(publicationToPut: Publication): Observable<Publication> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    const body: string = JSON.stringify(publicationToPut);\n    alert(body);\n    return this.http.put<Publication>(baseURL + 'publications/13', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n}\n\n\n/*\nsubmitFeedback(feedback: Feedback): Observable<Feedback> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n\n    const body: string = JSON.stringify(feedback);\n\n    return this.http.post<Feedback>(baseURL + 'feedback/', body, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n}\n\n\nputDish(dish: Dish): Observable<Dish> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.put<Dish>(baseURL + 'dishes/' + dish.id, dish, httpOptions)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n\n}\n\nexport class Feedback {\n    firstname:      string;\n    lastname:       string;\n    telnum:         number;\n    email:          string;\n    agree:          boolean;\n    contacttype:    string;\n    message:        string;\n\n    constructor() {\n        this.firstname      = '';\n        this.lastname       = '';\n        this.telnum         = 0;\n        this.email          = '';\n        this.agree          = false;\n        this.contacttype    = '';\n        this.message        = '';\n    }\n};\n\nexport const ContactType = ['None', 'Tel', 'Email'];\n\n\n*/\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}